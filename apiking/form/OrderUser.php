<?php
/**
 * Created by PhpStorm.
 * Project: morkovka
 * User: lxShaDoWxl
 * Date: 07.09.15
 * Time: 9:34
 */
namespace frontend\form;

use common\models\User;
use yii\base\Model;

class OrderUser extends Model
{
    public $name;
    public $phone;
    public $email;

    public $isEntity;
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'email', 'phone'], 'trim'],
            [['name', 'phone'], 'required'],
            [['phone'], 'match', 'pattern' => '/^((\+?7)(\(?\d{3})\)-?)?(\d{3})(-?\d{4})$/', 'message' => \Yii::t('main', 'Некорректный формат поля {attribute}')],
            ['email', 'email'],
            ['email', 'unique', 'targetClass' => User::className(), 'targetAttribute' => 'email'],
            ['isEntity', 'boolean'],
        ];
    }
    /**
     * Returns the form name that this model class should use.
     *
     * The form name is mainly used by [[\yii\widgets\ActiveForm]] to determine how to name
     * the input fields for the attributes in a model. If the form name is "A" and an attribute
     * name is "b", then the corresponding input name would be "A[b]". If the form name is
     * an empty string, then the input name would be "b".
     *
     * By default, this method returns the model class name (without the namespace part)
     * as the form name. You may override it when the model is used in different forms.
     *
     * @return string the form name of this model class.
     */
    public function formName()
    {
        return 'user_info';
    }
    /**
     * This method is invoked before validation starts.
     * The default implementation raises a `beforeValidate` event.
     * You may override this method to do preliminary checks before validation.
     * Make sure the parent implementation is invoked so that the event can be raised.
     * @return boolean whether the validation should be executed. Defaults to true.
     * If false is returned, the validation will stop and the model is considered invalid.
     */
    public function beforeValidate()
    {
        if ($this->isEntity == 1) {
            $this->scenario = 'entity';
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }
    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'name' => 'Имя',
            'phone' => 'Мобильный номер',
            'email' => 'Электронная почта',
            'isEntity' => 'Юридическое лицо',
            'entity_name' => 'Юр. название',
            'entity_address' => 'Юр. адрес',
            'entity_bin' => 'БИН',
            'entity_iik' => 'ИИК',
            'entity_bank' => 'Банк',
            'entity_bik' => 'БИК',
            'entity_nds' => 'Плательщик НДС',
        ];
    }
}