<?php
namespace apiking\controllers;

use common\components\Debugger as d;
use apiking\form\LoginForm;
use apiking\widgets\ActiveForm;
use apiking\form\SignupForm;
use apiking\form\SmsLogin;
use apiking\form\CodeLogin;
use common\models\User;
use Yii;
use yii\filters\AccessControl;
use yii\filters\auth\QueryParamAuth;
use yii\rest\ActiveController;
use yii\web\Response;
use common\models\AboutHistory;
use backend\models\Pages;
use common\models\News;
use yii\data\Pagination;
use yii\web\BadRequestHttpException;
use yii\filters\auth\HttpHeaderAuth;
use common\models\ItemFavorites;


/**
* Описание регистрации и авторизации пользователя 'K I N G F I S H E R'
* baseURL = http://kingfisher.kz
*
* @author 'kingfisher'
* 
*/
class UserapiController extends MainController
{
	/**
	* @ignore
	*/
    public $modelClass = ItemFavorites::class;

	/**
	* @ignore
	*/
	protected function verbs()
	{
		return [
			'register' => ['POST'],
			'user-delete' => ['GET'],
			'login' => ['POST'],
			'generateguest' => ['GET'],
			'smslogin' => ['POST'],
			'codelogin' => ['POST'],
			'reka' => ['GET'],
            'get-user-by-id' => ['GET'],
            'get-id' => ['GET'],
            'get-user-info' => ['GET'],
            'logout' => ['GET'],
		];
	}

//	public function beforeAction($action)
//    {
////        d::ajax(Yii::$app->controller->action->id);
////        d::ajax($action->id);
//        return parent::beforeAction($action); // TODO: Change the autogenerated stub
//    }

    public function actionGetId($session_id)
    {
        $session = Yii::$app->session;
        if($session->get($session_id . 'user_id')){
            $result = $session->get($session_id . 'user_id');
        }else{
            $result = 'Пользователь не найден';
        }
        return $result;
    }

    /**
     * @param $session_id
     * @return array|string|string[]
     */
    public function actionGetUserInfo($session_id)
    {
        $session = Yii::$app->session;
        if($session->get($session_id . 'user_id')){
            $user = User::find()->where(['auth_key' => $session_id])->one();
            if($user){
                $result['success'] = [
                    'name' => $user->username,
                    'phone' => $user->phone,
                    'email' => $user->email,
                    'id' => $user->id,
                    'isWholesale' => $user->isWholesale
                ];
            }else{
                $result = ['error' => 'Пользователь не существует'];
            }
        }else{
            $result = 'Пользователь не найден';
        }
        return $result;
    }
    public function actionGetUserById($id)
    {
	    $user = User::findOne($id);
	    if($user){
	        $result['name'] = $user->username;
	        $result['phone'] = $user->phone;
	        $result['email'] = $user->email;
        }else{
            $result = ['error' => 'Пользователь не найден'];
        }
        return $result;
    }

    public function actionUserDelete($id)
    {
	    $user = User::findOne($id);
	    if($user){
	        if($user->delete()) {
                $result['message']['success'] = 'Аккаунт удалён';
            }else{
                $result['message']['error'] = 'Ошибка удаления. Что-то пошло не так!';
            }
        }else{
            $result['message']['error'] = 'Пользователь не найден';
        }
        return $result;
    }

	/**
	* РЕГИСТРАЦИЯ ПОЛЬЗОВАТЕЛЯ
	* 
	* POST запрос 
	* отправить json {"username":"reka","phone":"7(921)-254-1212","email":"62237@mail.ru","password":"password"} <br>
	* header 'Accept:application/json'<br>
	* header 'Content-Type:application/json'<br>
	* на адрес<br>
	*  baseURL/apiking/userapi/register <br>
	* Возвращается<br>
	* строка 'токен' - если запрос выполнен успешно<br>
	* объект 'модель' - если запрос выполнен не успешно<br>
	* @return array 
	*/
	public function actionRegister()
    {
		$model = new SignupForm();
        $model->load(Yii::$app->request->bodyParams, '');
        if ($token = $model->signup()) {
            return $token;
        } else {
            return $model;
        }
    }
		 
	/**
	* ВХОД
	* 
	* POST запрос на адрес<br>
	* baseURL/apiking/userapi/login<br>
	* отправить {"username":"Email почта","password":"пароль"} !!! Внимание именно email, а не имя, согласно сайта<br>
	* header 'Accept:application/json'<br>
	* header 'Content-Type:application/json'<br>
	* Возвращается<br>
	* строка 'токен' - если запрос выполнен успешно<br>
	* объект 'модель' - если запрос выполнен не успешно<br>
	* @return string
	*/
	
	 public function actionLogin()
    {
        $model = new LoginForm();
        $model->load(Yii::$app->request->bodyParams, '');
        if ($token = $model->auth()) { 
            return $token;
        } else {
            return $model;
        }
    }

    public function actionLogout($session_id)
    {
        $session = Yii::$app->session;

        $session->remove($session_id . 'code');
        $session->remove($session_id . 'user_id');
        $session->remove($session_id . 'username');

        return ['message' => ['success' => 'Пользователь вышел']];
    }
	
	/**
	* ГЕНЕРАЦИЯ ГОСТЕВОГО ТОКЕНА 
	*  (рекомендуется запускать этот метод первый раз при запуске приложения и сохранять его в памяти телефона)
	* !!! ДАННЫЙ ТОКЕН НЕ СОХРАНЯЕТСЯ В БАЗЕ НА СЕРВЕРЕ, ОН НЕОБХОДИМ ДЛЯ ЭМУЛЯЦИИ СОСТОЯНИЯ СЕССИИ. 
	* GET запрос на адрес<br>
	* baseURL/apiking/userapi/generateguest <br>
	* Возвращается<br>
	* строка 'токен' - если запрос выполнен успешно<br>
	* @return string
	*/
    public function actionGenerateguest()
    {
        return Yii::$app->security->generateRandomString();
    }
	
	/**
	* SMS - ВХОД -ОТПРАВКА СМС (ПОВТОРНАЯ ОТПРАВКА)
	* 
	* POST запрос на адрес<br>
	* baseURL/apiking/userapi/smslogin?session_id=$token_guest<br>
	*, где $token_guest - гостевой токен, который присваивается в самом начале<br>
	* отправить {"phone":"телефон"}<br>
	* header 'Accept:application/json'<br>
	* header 'Content-Type:application/json'<br>
	* Возвращается строка в случае удачи<br>
	*			{<br>
	*	&#8195;	"message": {<br>
	*	&#8195;&#8195;	"success": "Смс отправлена на Ваш телефон!!!"<br>
	*	&#8195;	}<br>
	*		}<br>
	* Возвращается строка в случае неудачи<br>
	*			{<br>
	*	&#8195;	"message": {<br>
	*	&#8195;&#8195;	"error": "Произошла ошибка на стороне серверa!"<br>
	*	&#8195;	}<br>
	*		}<br>
	* @return string
	*/

	 public function actionSmslogin($session_id)
    {	
		$model = new SmsLogin();
		$result = $model->send(Yii::$app->request->post(), $session_id);
		return $result;		
    }
	
	/**
	* SMS - ВХОД - ОТПРАВКА КОДА ИЗ СМС
	* 
	* POST запрос на адрес<br>
	* baseURL/apiking/userapi/codelogin?session_id=$token_guest<br>
	*, где $token_guest - гостевой токен, который присваивается в самом начале<br>
	* отправить {"code":"код полученный через смс"}<br>
	* header 'Accept:application/json'<br>
	* header 'Content-Type:application/json'<br>
	* Возвращается<br>
	* строка 'токен' - если запрос выполнен успешно<br>
	* строка 'Произошла ошибка на стороне сервера!' - если запрос выполнен не успешно<br>
	* строка 'Вы ввели не верный код' - если введен не верный код<br>
	* @return string
	*/
	
	 public function actionCodelogin($session_id)
    {
		$model = new CodeLogin();
	//	$result = $model->send(Yii::$app->request->post(), $session_id);
		
	//	return $result;
		if ($auth_key = $model->send(Yii::$app->request->post(), $session_id)) {
            return $auth_key;
        } else {
            return $model;
        }
    }
	
	  
	 public function actionReka($code, $te)
    {
		$model = new CodeLogin();
	//	$result = $model->send(Yii::$app->request->post(), $session_id);
	  	
	//	return $result;
		if ($auth_key = $model->sendd($code, $te)) {
            return $auth_key;
        } else {
            return $model;
        }
    }	
	
	
	
	
	
	
}