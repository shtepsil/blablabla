<?php
/**
 * Created by PhpStorm.
 * Project: morkovka
 * User: lxShaDoWxl
 * Date: 08.09.15
 * Time: 13:47
 */

namespace shadow\widgets;

use yii\bootstrap\ActiveField;
use yii\helpers\ArrayHelper;
use yii\helpers\Html;

class AdminActiveField extends ActiveField
{
    /**
     * Initializes the object.
     * This method is invoked at the end of the constructor after the object is initialized with the
     * given configuration.
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->inputOptions['autocomplete'] = 'off';
    }

    public function imgInput($options = [])
    {
        // https://github.com/yiisoft/yii2/pull/795
        if ($this->inputOptions !== ['class' => 'form-control']) {
            $options = array_merge($this->inputOptions, $options);
        }
        $this->adjustLabelFor($options);
        $input = Html::activeFileInput($this->model, $this->attribute, $options);
        if (isset($this->model->{$this->attribute}) && $this->model->{$this->attribute}) {
            $src = $this->model->{$this->attribute};
            $img = Html::tag('div',
                Html::a(Html::img($src, ['style' => 'max-height: 150px;']), $src, ['target' => '_blank']));
        } else {
            $img = '';
        }
        $this->parts['{input}'] = $input . $img;
        return $this;
    }

    public function input($type, $params = [])
    {
        $afterInput = ArrayHelper::getValue($params, 'afterInput');
        ArrayHelper::remove($params, 'afterInput');
		Html::addCssClass($params, $this->inputOptions['class']);
        $options = array_merge($this->inputOptions, $params);
        $this->adjustLabelFor($options);
        $input = Html::activeInput($type, $this->model, $this->attribute, $options);
        if ($afterInput) {
            $input .= $afterInput($this->model);
        }
        $this->parts['{input}'] = $input;
        return $this;
    }

    /**
     * @param array $params
     * @return $this
     */
    public function textarea($params = [])
    {
        Html::addCssClass($params, $this->inputOptions['class']);
        $options = array_merge($this->inputOptions, $params);
        $this->adjustLabelFor($options);
        $this->parts['{input}'] = Html::activeTextarea($this->model, $this->attribute, $options);

        return $this;
    }
}