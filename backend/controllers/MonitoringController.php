<?php

namespace backend\controllers;

use backend\AdminController;
use common\models\Category;
use common\models\Items;
use common\models\User;
use Yii;
use yii\bootstrap\ActiveForm;
use yii\data\Pagination;
use yii\filters\AccessControl;
use yii\filters\VerbFilter;
use yii\helpers\Url;
use yii\web\Response;
use yii\web\View;
use shadow\plugins\seo\behaviors\SSeoBehavior;


/**
 * Class CategoryController
 * @package backend\controllers
 * @property \common\models\Category $model
 */
class MonitoringController extends AdminController
{
    public function init()
    {
        $this->on(self::EVENT_BEFORE_ACTION, function () {
            $this->model = new Category();
        });
        $this->MenuActive('catalog');
        $this->view->title = 'Мониторинг';
        $this->breadcrumb[] = [
            'url' => ['category/index'],
            'label' => $this->view->title
        ];
        $this->url = [
            'back' => ['category/index'],
            'control' => ['category/control']
        ];
        parent::init(); // TODO: Change the autogenerated stub
    }
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
         $result = [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['admin'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'control' => ['post', 'get'],
                    'filter' => ['post', 'get'],
                ],
            ],
        ];
		 // if (SSeoBehavior::enableSeoEdit()) {
            // $result['seo'] = [
                // 'class' => SSeoBehavior::className(),
                // 'nameTranslate' => 'name',
                // 'controller' => 'site',
                // 'action' => 'catalog',
                // 'parentRelation' => 'parent',
                // 'childrenRelation' => [
                    // 'categories',
                    // 'items',
                // ],
            // ];
        // }

        return $result;
    }
	 
	 public function actionControl()
    {
        $this->view->title = 'Категория';
        $this->breadcrumb[] = [
            'url' => ['category/control'],
            'label' => $this->view->title
        ];
        $item = $this->model;
        if ($id = \Yii::$app->request->get('id')) {
            $item = $item->findOne($id);
        }
        $data['item'] = $item;
        if ($data['item']) {
            return $this->render('//control/form', $data);
        } else {
            return false;
        }
    }
	
	
    public function actionAllsms()
    {

		$user_res = User::find()->andWhere(
			[                             
				'`user`.status' => 10,							
			]) 
			->andWhere(
			[  
				'>',										
				'`user`.count_sms',
				0						
			]	
		);
				 					
		$countQuery = clone $user_res;		
		$pages = new Pagination(['totalCount' => $countQuery->count(), 'pageSize' => 500]);

		$models = $user_res->offset($pages->offset)
		->limit($pages->limit)
		->all();

		$data['pages'] = $pages;					
						
		$data['user_res'] = $models;	
	
	//	$data['user_res'] = $user_res->all();	
        return $this->render('index', $data);
    }
	
	  public function actionIndex()
    { 
        return $this->render('index');
    }
 
}
