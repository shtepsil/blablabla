<?php
/**
 * Created by PhpStorm.
 * Project: yii2-cms
 * User: lxShaDoWxl
 * Date: 08.05.15
 * Time: 10:41
 */

namespace backend\controllers;


use backend\AdminController;
use common\models\Columns;
use common\models\Module;
use Yii;
use yii\bootstrap\ActiveForm;
use yii\filters\AccessControl;
use yii\filters\VerbFilter;
use yii\web\Response;

class ModuleController extends AdminController {
    /**
     * @var \common\models\Template
     */
    public $model;

    public function init()
    {
        $this->MenuActive('module');
        $this->model=new Module();
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['loginAdminPanel'],
                    ],

                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'add_column' => ['post'],
                ],
            ],
        ];
    }
    public function actionAdd(){
        $data['item'] = $this->model;
        return $this->render('//control/form',$data);
    }
    public function actionEdit($id){
        $data['item'] = $this->model->findOne($id);
        if ($data['item']) {
            return $this->render('//control/form', $data);
        } else {
            return false;
        }
    }
    public function actionSave(){
        $record = $this->model;

        if($id=Yii::$app->request->post('id')){
            $record = $record->findOne($id);
        }
        if($record->load(Yii::$app->request->post())){
            if(Yii::$app->request->isAjax){
                Yii::$app->response->format = Response::FORMAT_JSON;
//				$record->on($record::EVENT_AFTER_VALIDATE, [$record, 'validateAll']);
                if ($errors = ActiveForm::validate($record)) {
                    $result['errors'] = $errors;
                } else {
                    $event = $record->isNewRecord ? $record::EVENT_BEFORE_INSERT : $record::EVENT_BEFORE_UPDATE;
                    $record->on($event, [$record, 'saveAll']);
                    $event_clear=$record->isNewRecord ? $record::EVENT_AFTER_INSERT : $record::EVENT_AFTER_UPDATE;
                    $record->on($event_clear, [$record, 'saveClear']);
                    if($record->save()){
                        $result['set_value']['id'] = $record->id;
                        $result['message']['success'] = 'Сохранено!';
                    }else{
                        $result['message']['error'] = 'Произошла ошибка!';
                    }
                }
                return $result;
            }else{
                $record->validate();
            }
        }
        if (!Yii::$app->request->isAjax) {
            return $this->goBack();
        }
    }
    public function actionAdd_column(){

        if(Yii::$app->request->isAjax){
            Yii::$app->response->format = Response::FORMAT_JSON;
            $field = Yii::$app->request->post('field');
            $result = array();
            if(!isset($field['id'])){
                $record = new Columns();
                $record->load(Yii::$app->request->post(),'field');
                if ($errors = ActiveForm::validate($record)) {
                    $result['errors'] = $errors;
                } else {
                    if($record->save()){
                        $result['column'] = $this->renderPartial('_column', ['item' => $record]);
                        $result['message']['success'] = 'Добавленно новое поле!';
                    }else{
                        $result['message']['error'] = 'Произошла ошибка!';
                    }
                }
            }
            return $result;
        }
    }
}