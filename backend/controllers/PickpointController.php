<?php

namespace backend\controllers;

use backend\AdminController;
use common\models\Pickpoint;
use Yii;
use yii\filters\AccessControl;
use yii\filters\VerbFilter;
use yii\helpers\Inflector;

class PickpointController extends AdminController
{
    public function init()
    {

        $this->model = new Pickpoint();
        $controller_name = Inflector::camel2id($this->id);
        $this->url = [
            'back' => [$controller_name . '/index'],
            'control' => [$controller_name . '/control']
        ];
        $this->view->title = 'Пункты самовывоза';
        $this->MenuActive($controller_name);
        $this->breadcrumb[] = [
            'url' => [$controller_name . '/index'],
            'label' => 'Пункты самовывоза'
        ];
        parent::init(); // TODO: Change the autogenerated stub
    }
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['loginAdminPanel'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'control' => ['post', 'get']
                ],
            ],
        ];
    }
    public function actionIndex()
    {
        $data['items'] = PickPoint::find()->orderBy(['id' => SORT_DESC])->all();
        return $this->render('//modules/pickpoint', $data);
    }

    public function actionControl()
    {
        $model = new PickPoint();

        if ($id = \Yii::$app->request->get('id')) {
            $model = $model->findOne($id);

            $this->breadcrumb[] = [
                'url' => [],
                'label' => $model->name
            ];

            $model->validate();
        }

        $data['item'] = $model;

        if (!empty($model)) {
            return $this->render('//control/tabs_form', $data);
        }

        return $this->render('//site/error', ['message' => 'Такого пункта не существует.']);
    }
}