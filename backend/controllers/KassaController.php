<?php
namespace backend\controllers;

use backend\AdminController;
use backend\models\SUser;
use common\models\SHistoryMoney;
use shadow\widgets\AdminActiveForm;
use Yii;
use yii\db\Expression;
use yii\filters\AccessControl;
use yii\filters\VerbFilter;
use yii\helpers\Html;
use yii\helpers\Inflector;
use yii\helpers\Url;
use yii\web\BadRequestHttpException;
use yii\web\Response;

/**
 * Class KassaController
 * @package backend\controllers
 * @property $model SHistoryMoney
 */
class KassaController extends AdminController
{
    public function init()
    {
        $this->model = new SHistoryMoney();
        $controller_name = Inflector::camel2id($this->id);

        $this->url = [
            'back' => [$controller_name.'/index'],
            'control' => [$controller_name.'/control']
        ];
        $this->view->title = 'Касса';
        $this->MenuActive($controller_name);
        $this->breadcrumb[] = [
            'url' => [$controller_name.'/index'],
            'label' => 'Касса'
        ];
        parent::init(); // TODO: Change the autogenerated stub
    }
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['loginAdminPanel'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'control' => ['post', 'get'],
//                    'filter' => ['post', 'get'],
                ],
            ],
        ];
    }
    public function actionIndex()
    {
        return $this->render('index');
    }
    public function actionControl()
    {
        $item = $this->model;
        if($id=Yii::$app->request->get('id')){
            $item->order_id = $id;
        }
        $data['item'] = $item;
        if ($data['item']) {
            return $this->render('form', $data);
        } else {
            return false;
        }
    }
    public function actionSave()
    {
        /**
         * @var $record SHistoryMoney
         */
        $record = $this->model;
        if ($record->load(Yii::$app->request->post())) {
            if (Yii::$app->request->isAjax) {
                Yii::$app->response->format = Response::FORMAT_JSON;
                if ($errors = AdminActiveForm::validate($record)) {
                    $result['errors'] = $errors;
                } else {
                    if(in_array(Yii::$app->user->identity->role,['admin','collector','driver','kassir'])){
                        $record->send_user_id = Yii::$app->user->id;
                        $record->status = 0;
                        if($record->type==2){
                            $record->order_id = null;
                        }
                        $save = $record->save();
                    }else{
                        $result['message']['error'] = 'У вас нету кассы';
                        return $result;
                    }
                    if ($save) {
                        if(Yii::$app->request->post('commit')==1){
                            $result['url'] = Url::to($this->url['back']);
                        }else{
                            $url = $this->url['control'];
                            $url['id'] = $record->id;
                            $result['url'] = Url::to($url);
                        }
                        $result['set_value']['id'] = $record->id;
                        $result['message']['success'] = 'Сохранено!';
                    } else {
                        $result['message']['error'] = 'Произошла ошибка!';
                    }
                }
                return $result;
            } else {
                $record->validate();
            }
        }
        if (!Yii::$app->request->isAjax) {
            return $this->goBack();
        }
    }
    public function actionCheckMoney()
    {
        /**
         * @var $history SHistoryMoney
         */
        if(Yii::$app->request->isAjax &&($id=Yii::$app->request->post('id'))&&($history=SHistoryMoney::findOne($id))){
            Yii::$app->response->format = Response::FORMAT_JSON;
            $result = [];
            if($history->recipient_user_id==Yii::$app->user->id&&$history->status==0){
                SHistoryMoney::updateAll(['status' => 1], ['id' => $history->id]);
                SUser::updateAllCounters(['kassa' =>$history->sum], ['id' => $history->recipient_user_id]);
                SUser::updateAll(['kassa' => new Expression('[[kassa]]-:sum', [':sum' => $history->sum])], ['id' => $history->send_user_id]);
                $result = [
                    'success' => 'ok',
                    'content' => Html::tag('span', 'Подтверждён', ['class' => 'label label-success'])
                ];
            }else{
                $result['error'] = 'Вы не получатель или уже подтвердили';
            }
            return $result;
        }else{
            throw new BadRequestHttpException();

        }
    }
}